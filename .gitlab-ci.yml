# This file is a template, and might need editing before it works on your project.
# see https://docs.gitlab.com/ce/ci/yaml/README.html for all available options


before_script:
  - echo "Running Build"
   
after_script:
  - echo "After script section"

stages:
  - dependencycheck
  - test
  - build
  - deploy
  - document

dependency:
  stage: dependencycheck
  script:
      - powershell.exe -command "if(!(Get-Module PSdepend)) {Install-Module PSDepend -force}"
      - powershell.exe -command "if(!(Get-Module buildhelpers)){Install-Module buildhelpers -force}"
      - powershell.exe -command "if(!(Get-Module pester)){Install-Module pester -force}"
      - powershell.exe -command "if(!(Get-Module PSScriptAnalyzer)){Install-Module PSScriptAnalyzer -force}"
      - powershell.exe -command "if(!(Get-Module psake)){Install-Module psake -force}"
      - powershell.exe -command "if(!(Get-Module PlatyPS)){Install-Module PlatyPS -force}"
      - powershell.exe -command "if(!(Get-Module PSFramework)){Install-Module PSFramework -force}"
      - powershell.exe -command "if(!(Get-Module PSModuleDevelopment)){Install-Module PSModuleDevelopment -force}"

Tests:
  stage: test
  script:
    - powershell.exe -file ".\tests\pester.ps1"
  artifacts:
    reports:
      junit: "./build/junitreport.xml"

Analyze:
  stage: test
  script:
    - powershell.exe -file ".\build\4.Analyze.ps1"

build:
  stage: build
  script:
    - powershell.exe -file .\build\0.build.ps1
  artifacts:
    paths:
      - passwordstate-management
  only:
    - master

Nuget:
  stage: deploy
  script:
    - powershell.exe -file .\build\3.deploy.ps1 -repotype $($env:repotype) -apikey $($env:apikey) -reponame $($env:reponame) -SourceLocation $($env:SourceLocation) -PublishLocation $($env:publishLocation)
  only:
    - master

.UpdateDocumentation:
  stage: document
  script:
    - powershell.exe -command "Update-MarkdownHelp -Path .\docs"
  only:
    - master
    